import React, { useState } from 'react';nimport { useDispatch } from 'react-redux';nimport { useNavigate } from 'react-router-dom';nimport { Box, Button, MenuItem, TextField, Typography } from '@mui/material';nimport { setUserInput } from '../../store/carSlice';nimport { t, getArray } from '../../utils/translations';nnconst SearchForm: React.FC = () => {n  const dispatch = useDispatch();n  const navigate = useNavigate();n  const drivingStyles = getArray('search.drivingStyles');n  const safetyLevels = getArray('search.safetyLevels');n  const [form, setForm] = useState({n    passengers: '',n    trunkSize: '',n    budget: '',n    drivingStyle: '',n    safetyLevel: '',n  });nn  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {n    setForm({ ...form, [e.target.name]: e.target.value });n  };nn  const handleSubmit = (e: React.FormEvent) => {n    e.preventDefault();n    dispatch(setUserInput(form));n    // TODO: Implement search filtering with backend APIn    // For now, just navigate to results pagen    navigate('/results');n  };nn  return (n    <Box component="form" onSubmit={handleSubmit} sx={{ maxWidth: 400, mx: 'auto', mt: 4, p: 3, boxShadow: 2, borderRadius: 2, bgcolor: 'background.paper' }}>n      <Typography variant="h5" mb={2}>{t('search.title')}</Typography>n      <TextFieldn        label={t('search.passengersLabel')}n        name="passengers"n        type="number"n        value={form.passengers}n        onChange={handleChange}n        fullWidthn        margin="normal"n      />n      <TextFieldn        label={t('search.trunkSizeLabel')}n        name="trunkSize"n        type="number"n        value={form.trunkSize}n        onChange={handleChange}n        fullWidthn        margin="normal"n      />n      <TextFieldn        label={t('search.budgetLabel')}n        name="budget"n        type="number"n        value={form.budget}n        onChange={handleChange}n        fullWidthn        margin="normal"n      />n      <TextFieldn        selectn        label={t('search.drivingStyleLabel')}n        name="drivingStyle"n        value={form.drivingStyle}n        onChange={handleChange}n        fullWidthn        margin="normal"n      >n        {drivingStyles.map((style: string) => (n          <MenuItem key={style} value={style}>{style}</MenuItem>n        ))}n      </TextField>n      <TextFieldn        selectn        label={t('search.safetyLevelLabel')}n        name="safetyLevel"n        value={form.safetyLevel}n        onChange={handleChange}n        fullWidthn        margin="normal"n      >n        {safetyLevels.map((level: string) => (n          <MenuItem key={level} value={level}>{level}</MenuItem>n        ))}n      </TextField>n      <Button type="submit" variant="contained" color="primary" fullWidth sx={{ mt: 2 }}>n        {t('search.button')}n      </Button>n    </Box>n  );n};nnexport default SearchForm;